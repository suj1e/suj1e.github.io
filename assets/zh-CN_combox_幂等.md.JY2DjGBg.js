import{_ as e,c as t,o,ag as r}from"./chunks/framework.BgId8OS5.js";const p=JSON.parse('{"title":"幂等","description":"","frontmatter":{"title":"幂等","slug":"幂等","sidebar_position":3},"headers":[],"relativePath":"zh-CN/combox/幂等.md","filePath":"zh-CN/combox/幂等.md"}'),i={name:"zh-CN/combox/幂等.md"};function l(s,a,n,_,d,c){return o(),t("div",null,a[0]||(a[0]=[r('<h1 id="幂等" tabindex="-1">幂等 <a class="header-anchor" href="#幂等" aria-label="Permalink to &quot;幂等&quot;">​</a></h1><h2 id="rest幂等" tabindex="-1">rest幂等 <a class="header-anchor" href="#rest幂等" aria-label="Permalink to &quot;rest幂等&quot;">​</a></h2><p>记录访问的ip和时间，用令牌漏斗算法去做，如果触发限流则直接报错。</p><p>设计流程：</p><ol><li>请求进入</li><li>切面拦截，记录请求地址，方法参数，当前时间和请求的ip</li><li>比如10s内重复请求了3次（做成配置化），则直接报错，不进入handle</li><li>当过了10s再请求，则懒删除清除缓存，db不除（清理方案是懒删除和定时任务）</li></ol><h2 id="无需幂等" tabindex="-1">无需幂等 <a class="header-anchor" href="#无需幂等" aria-label="Permalink to &quot;无需幂等&quot;">​</a></h2><p>比如查询状态的接口一般不需要幂等的</p>',7)]))}const m=e(i,[["render",l]]);export{p as __pageData,m as default};
