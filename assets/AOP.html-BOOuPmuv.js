import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,f as r,o as n}from"./app-DgYkk166.js";const i={};function c(a,e){return n(),o("div",null,e[0]||(e[0]=[r("<p>ProxyProcessorSupport<br> 四种常用实现方式</p><ol><li>定义<code>DefaultAnnotationPointAdvisor</code>bean，配置切点和拦截器（实现<code>MethodInterceptor</code>）</li><li>使用ProxyFactory创建一个proxy</li><li><code>@Aspect</code>定制切面，配置execution和通知</li><li>FactoryBean自定义bean的生成【可以在创建bean的时候赋予它proxy能力】</li></ol>",2)]))}const l=t(i,[["render",c]]),d=JSON.parse('{"path":"/posts/blog/%E6%A1%86%E6%9E%B6/Spring/AOP.html","title":"","lang":"zh-CN","frontmatter":{"description":"ProxyProcessorSupport 四种常用实现方式 定义DefaultAnnotationPointAdvisorbean，配置切点和拦截器（实现MethodInterceptor） 使用ProxyFactory创建一个proxy @Aspect定制切面，配置execution和通知 FactoryBean自定义bean的生成【可以在创建be...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-02T11:50:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xcombo\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/blog/%E6%A1%86%E6%9E%B6/Spring/AOP.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:description","content":"ProxyProcessorSupport 四种常用实现方式 定义DefaultAnnotationPointAdvisorbean，配置切点和拦截器（实现MethodInterceptor） 使用ProxyFactory创建一个proxy @Aspect定制切面，配置execution和通知 FactoryBean自定义bean的生成【可以在创建be..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-02T11:50:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-02T11:50:41.000Z"}]]},"git":{"createdTime":1748864503000,"updatedTime":1748865041000,"contributors":[{"name":"sujie","username":"sujie","email":"13156660820@163.com","commits":3,"url":"https://github.com/sujie"}]},"readingTime":{"minutes":0.23,"words":70},"filePathRelative":"posts/blog/框架/Spring/AOP.md","excerpt":"<p>ProxyProcessorSupport<br>\\n四种常用实现方式</p>\\n<ol>\\n<li>定义<code>DefaultAnnotationPointAdvisor</code>bean，配置切点和拦截器（实现<code>MethodInterceptor</code>）</li>\\n<li>使用ProxyFactory创建一个proxy</li>\\n<li><code>@Aspect</code>定制切面，配置execution和通知</li>\\n<li>FactoryBean自定义bean的生成【可以在创建bean的时候赋予它proxy能力】</li>\\n</ol>\\n","autoDesc":true}');export{l as comp,d as data};
